<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="update_fabric_location">

<select id="getPRODUCT_COST">
SELECT PRODUCT_COST FROM PRODUCT_TBL WHERE PRODUCT_CODE=#{PRODUCT_CODE}
</select>

<select id="dvrNoCheckExist">
  SELECT ISNULL(MAX(DVR_NO), '') DVR_NO FROM DELIVERY_H_TBL WHERE DVR_NO LIKE #{tempDvrNo}
</select>

<insert id="insert2DeliveryHTable">
INSERT INTO DELIVERY_H_TBL (DVR_NO, DVR_DATE, DVR_TIME, PAY_CODE, EMP_NO,
P_CUST_CODE, F_CUST_CODE, REC_EMP_NO)
VALUES (#{DVR_NO}, #{currentDate}, #{currentTime}, #{PAY_CODE}, #{EMP_NO},
#{FROM_CUST}, #{TO_CUST}, '')
</insert>

<insert id="insert2DeliveryHRemarkTable">
INSERT INTO DELIVERY_H_REMARK_TBL (DVR_NO, REMARK) VALUES (#{DVR_NO}, #{drvRemark})
</insert>

<select id="InNoCheckExist" parameterType="map" resultType="string">
  
  SELECT ISNULL(MAX(IN_NO), '') IN_NO FROM IN_H_TBL WHERE IN_NO LIKE #{tempInNo}
  
</select>





<insert id="insert2InHTable">
INSERT INTO IN_H_TBL (IN_NO, IN_DATE, IN_TIME, PAY_CODE, EMP_NO, 
P_CUST_CODE, F_CUST_CODE)
VALUES (#{IN_NO}, #{currentDate}, #{currentTime}, #{PAY_CODE}, #{EMP_NO}, 
#{FROM_CUST}, #{TO_CUST})
</insert>

<insert id="insert2InHRemarkTable">
INSERT INTO IN_H_REMARK_TBL (IN_NO, REMARK) VALUES(#{IN_NO}, #{inHNote})
</insert>

<insert id="insert2DeliveryDTable">
INSERT INTO DELIVERY_D_TBL (DVR_NO, SEQ_NO, PRODUCT_CODE, DVR_QTY, DVR_COST, DVR_PRICE, DVR_D_REMARK)
VALUES (#{OUT_NO}, 1, #{PRODUCT_CODE}, #{PRODUCT_QTY}, #{PRODUCT_COST}, 0, '')
</insert>

<insert id="insert2iNDTable">
INSERT INTO IN_D_TBL (IN_NO, SEQ_NO, PRODUCT_CODE, IN_QTY, IN_COST,IN_PRICE, IN_D_REMARK, PRODUCT_COST)
VALUES (#{IN_NO}, 1, #{PRODUCT_CODE}, #{PRODUCT_QTY}, 0, 0, '', #{PRODUCT_COST})
</insert>

<select id="stockMoveCheck">
  SELECT A.IN_NO, A.SEQ_NO, A.INOUT_DATE, A.INOUT_COST, A.INOUT_QTY AS IN_QTY,
  (SELECT SUM(INOUT_QTY) FROM PRD_STOCK_TBL WITH(NOLOCK) WHERE IN_NO = A.IN_NO AND SEQ_NO = A.SEQ_NO AND INOUT_SEQ > 0) AS OUT_QTY
  FROM PRD_STOCK_TBL A WITH(NOLOCK)
  WHERE A.P_CUST_CODE = #{FROM_CUST}
  AND A.PRODUCT_CODE = #{PRODUCT_CODE}
  AND A.INOUT_SEQ = 0
  AND A.END_YN <> ''Y''
  ORDER BY INOUT_DATE
</select>


<insert id="insert2ProductStock">
INSERT INTO PRD_STOCK_TBL (IN_NO, SEQ_NO, INOUT_SEQ, PRODUCT_CODE,
              INOUT_QTY, INOUT_COST,
              P_CUST_CODE, F_CUST_CODE, INOUT_DATE,
              DVR_NO, DVR_SEQ, END_YN)
       SELECT #{IN_NO},#{SEQ_NO}, ISNULL(MAX(INOUT_SEQ),0) + 1,  #{PRODUCT_CODE},
              #{Qty}, #{Cost},
             #{TO_CUST}, #{FROM_CUST}, #{currentDate},
             #{DVR_NO}, #{dvrSeqNo}, 'N'
         FROM PRD_STOCK_TBL WITH(NOLOCK)
        WHERE IN_NO = #{IN_NO} AND SEQ_NO = #{SEQ_NO}
</insert>

<insert id="insert2ProductStock1">
INSERT INTO PRD_STOCK_TBL (IN_NO, SEQ_NO, INOUT_SEQ, PRODUCT_CODE,
              INOUT_QTY, INOUT_COST,
              P_CUST_CODE, F_CUST_CODE, INOUT_DATE,
              DVR_NO, DVR_SEQ, END_YN)
       SELECT #{IN_NO}, ISNULL(MAX(INOUT_SEQ),0) + 1, 0, #{PRODUCT_CODE},
              #{PRODUCT_QTY}, #{PRODUCT_COST},
             #{TO_CUST}, #{FROM_CUST}, #{currentDate},
             '', 0, 'N'
         FROM PRD_STOCK_TBL WITH(NOLOCK)
        WHERE IN_NO = #{IN_NO} 
</insert>
<select id="getInQty_OutQty">

  SELECT
  (SELECT INOUT_QTY FROM PRD_STOCK_TBL WITH(NOLOCK)
    WHERE IN_NO = #{IN_NO} AND SEQ_NO = #{SEQ_NO} AND PRODUCT_CODE = #{PRODUCT_CODE} AND INOUT_SEQ = 0) AS IN_QTY,
  (SELECT SUM(INOUT_QTY) FROM PRD_STOCK_TBL WITH(NOLOCK)
    WHERE IN_NO = @IN_NO AND SEQ_NO = @SEQ_NO AND PRODUCT_CODE = #{PRODUCT_CODE} AND INOUT_SEQ > 0) AS OUT_QTY

</select>


<update id="updateProductStockEND">
UPDATE PRD_STOCK_TBL SET END_YN = 'Y' 
WHERE IN_NO = #{IN_NO} AND SEQ_NO = #{SEQ_NO}
</update>

<select id="stockTableDeliveryCheck">

  SELECT 
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE}) AS TOT_CNT,
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE} AND STOCK_DATE = #{currentDate}) AS DATE_CNT,
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE} AND STOCK_DATE > #{currentDate}) AS DATE_HIGH_CNT,
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE} AND STOCK_DATE < #{currentDate}) AS DATE_LOW_CNT
</select>


<insert id="insert2StockTable">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE, 
          TRANS_QTY, TRANS_PRICE,
          IN_QTY, IN_PRICE,
          OUT_QTY, OUT_PRICE,
          STOCK_QTY, STOCK_PRICE)
  VALUES (#{FROM_CUST}, #{PRODUCT_CODE}, '00000000',
          0,0,
          0,0,
          0,0,
          0,0)
</insert>



<insert id="insert2StockTable1">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE, 
          TRANS_QTY, TRANS_PRICE,
          IN_QTY, IN_PRICE,
          OUT_QTY, OUT_PRICE,
          STOCK_QTY, STOCK_PRICE)
  VALUES (#{FROM_CUST}, #{PRODUCT_CODE}, #{currentDate},
          0,0,
          0,0,
        #{PRODUCT_QTY}, #{drvPrice},
        -#{PRODUCT_QTY}, -#{drvPrice})
</insert>


<insert id="insert2StockTable2">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE,
                       TRANS_QTY, TRANS_PRICE,
                       IN_QTY, IN_PRICE,
                       OUT_QTY, OUT_PRICE,
                       STOCK_QTY, STOCK_PRICE)
SELECT TOP 1 
       CUST_CODE, PRODUCT_CODE, #{currentDate},
       STOCK_QTY, STOCK_PRICE,
       0, 0,
     #{PRODUCT_QTY}, #{drvPrice},
       STOCK_QTY - #{PRODUCT_QTY}, STOCK_PRICE - #{drvPrice}
  FROM STOCK_TBL
 WHERE CUST_CODE = #{FROM_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE < #{currentDate}
 ORDER BY STOCK_DATE DESC
</insert>


<update id="updateStockTable">
UPDATE STOCK_TBL
   SET OUT_QTY = OUT_QTY + #{PRODUCT_QTY},
       OUT_PRICE = OUT_PRICE + #{drvPrice},
       STOCK_QTY = STOCK_QTY - #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE - #{drvPrice}
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE = #{currentDate}
</update>

<select id="getStockDatefromStockTable">
SELECT STOCK_DATE FROM STOCK_TBL WITH(NOLOCK)
 WHERE CUST_CODE = #{FROM_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE >= #{currentDate}
 ORDER BY STOCK_DATE
</select>

<update id="updateStockTable1">
UPDATE STOCK_TBL
   SET OUT_QTY = OUT_QTY + #{PRODUCT_QTY},
       OUT_PRICE = OUT_PRICE + #{drvPrice},
       STOCK_QTY = STOCK_QTY - #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE - #{drvPrice}
 WHERE CUST_CODE = #{FROM_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE = #{stockDate}
</update>

<update id="updateStockTable2">
UPDATE STOCK_TBL
   SET TRANS_QTY = TRANS_QTY - #{PRODUCT_QTY},
       TRANS_PRICE = TRANS_PRICE - #{drvPrice},
       STOCK_QTY = STOCK_QTY - #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE - #{drvPrice}
 WHERE CUST_CODE = #{FROM_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE = #{stockDate}
</update>

<insert id="insert2StockTable3">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE, 
          TRANS_QTY, TRANS_PRICE,
          IN_QTY, IN_PRICE,
          OUT_QTY, OUT_PRICE,
          STOCK_QTY, STOCK_PRICE)
  VALUES (#{FROM_CUST}, #{PRODUCT_CODE}, #{currentDate},
          0,0,
          0,0,
        #{PRODUCT_QTY}, #{drvPrice},
        -#{PRODUCT_QTY}, -#{drvPrice})
</insert>
<insert id="insert2StockTable4">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE,
                       TRANS_QTY, TRANS_PRICE,
                       IN_QTY, IN_PRICE,
                       OUT_QTY, OUT_PRICE,
                       STOCK_QTY, STOCK_PRICE)
SELECT TOP 1 
       CUST_CODE, PRODUCT_CODE, #{currentDate},
       STOCK_QTY, STOCK_PRICE,
       0, 0,
     #{PRODUCT_QTY}, #{drvPrice},
       STOCK_QTY - #{PRODUCT_QTY}, STOCK_PRICE - #{drvPrice}
  FROM STOCK_TBL
 WHERE CUST_CODE = #{FROM_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE < #{currentDate}
 ORDER BY STOCK_DATE DESC
</insert>

<select id="stockTableDeliveryCheckin">

  SELECT 
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{TO_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE}) AS TOT_CNT,
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{TO_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE} AND STOCK_DATE = #{currentDate}) AS DATE_CNT,
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{TO_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE} AND STOCK_DATE > #{currentDate}) AS DATE_HIGH_CNT,
    (SELECT COUNT(*) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{TO_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE} AND STOCK_DATE < #{currentDate}) AS DATE_LOW_CNT
</select>


<insert id="insert2StockTablein">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE, 
          TRANS_QTY, TRANS_PRICE,
          IN_QTY, IN_PRICE,
          OUT_QTY, OUT_PRICE,
          STOCK_QTY, STOCK_PRICE)
  VALUES (#{TO_CUST}, #{PRODUCT_CODE}, #{currentDate},
          0,0,
        #{PRODUCT_QTY}, #{inPrice},
          0,0,
        #{PRODUCT_QTY}, #{inPrice})
</insert>

<insert id="insert2StockTable1in">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE, 
          TRANS_QTY, TRANS_PRICE,
          IN_QTY, IN_PRICE,
          OUT_QTY, OUT_PRICE,
          STOCK_QTY, STOCK_PRICE)
  VALUES (#{TO_CUST}, #{PRODUCT_CODE}, #{currentDate},
          0,0,
        #{PRODUCT_QTY}, #{inPrice},
          0,0,
        #{PRODUCT_QTY}, #{inPrice})
</insert>

<insert id="insert2StockTable2in">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE,
                       TRANS_QTY, TRANS_PRICE,
                       IN_QTY, IN_PRICE,
                       OUT_QTY, OUT_PRICE,
                       STOCK_QTY, STOCK_PRICE)
SELECT TOP 1 
       CUST_CODE, PRODUCT_CODE, #{currentDate},
       STOCK_QTY, STOCK_PRICE,
     #{PRODUCT_QTY}, #{inPrice},
       0, 0,
       STOCK_QTY + #{PRODUCT_QTY}, STOCK_PRICE + #{inPrice}
  FROM STOCK_TBL
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE < #{currentDate}
 ORDER BY STOCK_DATE DESC
</insert>

<update id="updateStockTablein">
UPDATE STOCK_TBL
   SET IN_QTY = IN_QTY + #{PRODUCT_QTY},
       IN_PRICE = IN_PRICE + #{inPrice},
       STOCK_QTY = STOCK_QTY + #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE + #{inPrice}
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE = #{currentDate}
</update>

<select id="getStockDatefromStockTablein">
SELECT STOCK_DATE FROM STOCK_TBL WITH(NOLOCK)
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE >= #{currentDate}
 ORDER BY STOCK_DATE
</select>

<update id="updateStockTable1in">
UPDATE STOCK_TBL
   SET IN_QTY = IN_QTY + #{PRODUCT_QTY},
       IN_PRICE = IN_PRICE + #{inPrice},
       STOCK_QTY = STOCK_QTY + #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE + #{inPrice}
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE = #{stockDate}
</update>

<update id="updateStockTable2in">
UPDATE STOCK_TBL
   SET TRANS_QTY = TRANS_QTY + #{PRODUCT_QTY},
       TRANS_PRICE = TRANS_PRICE + #{inPrice},
       STOCK_QTY = STOCK_QTY + #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE + #{inPrice}
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE = #{stockDate}
</update>

<insert id="insert2StockTable4in">
INSERT INTO STOCK_TBL (CUST_CODE, PRODUCT_CODE, STOCK_DATE,
                       TRANS_QTY, TRANS_PRICE,
                       IN_QTY, IN_PRICE,
                       OUT_QTY, OUT_PRICE,
                       STOCK_QTY, STOCK_PRICE)
SELECT TOP 1 
       CUST_CODE, PRODUCT_CODE, #{currentDate},
       STOCK_QTY, STOCK_PRICE,
     #{PRODUCT_QTY}, #{inPrice},
       0, 0,
       STOCK_QTY + #{PRODUCT_QTY}, STOCK_PRICE + #{inPrice}
  FROM STOCK_TBL
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE < #{currentDate}
 ORDER BY STOCK_DATE DESC
</insert>
<update id="updateStockTable3in">
UPDATE STOCK_TBL
   SET TRANS_QTY = TRANS_QTY + #{PRODUCT_QTY},
       TRANS_PRICE = TRANS_PRICE + #{inPrice},
       STOCK_QTY = STOCK_QTY + #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE + #{inPrice}
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE > #{currentDate}
</update>
<update id="updateStockTable4in">
UPDATE STOCK_TBL
   SET IN_QTY = IN_QTY + #{PRODUCT_QTY},
       IN_PRICE = IN_PRICE + #{inPrice},
       STOCK_QTY = STOCK_QTY + #{PRODUCT_QTY},
       STOCK_PRICE = STOCK_PRICE + #{inPrice}
 WHERE CUST_CODE = #{TO_CUST}
   AND PRODUCT_CODE = #{PRODUCT_CODE}
   AND STOCK_DATE = #{currentDate}
</update>
<select id="getStockQty_StockPrice">

  SELECT STOCK_QTY, STOCK_PRICE FROM STOCK_TBL WITH(NOLOCK)
  WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE}
  AND STOCK_DATE = (SELECT MAX(STOCK_DATE) FROM STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE =#{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE})
</select>


<delete id="deleteStockCustTable">
DELETE FROM STOCK_CUST_TBL WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE}
</delete>

<select id="getStockCustCount" parameterType="map" resultType="int">
  SELECT COUNT(*) AS CNT FROM STOCK_CUST_TBL WITH(NOLOCK) WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE}
</select>


<insert id="insert2StockCustTable">
INSERT INTO STOCK_CUST_TBL (CUST_CODE, PRODUCT_CODE, STOCK_QTY, STOCK_PRICE)
VALUES (#{FROM_CUST},#{PRODUCT_CODE},#{stockQty},#{stockPrice})
</insert>

<update id="updateStockCustTable">
UPDATE STOCK_CUST_TBL
   SET STOCK_QTY = #{stockQty},
       STOCK_PRICE = #{stockPrice}
 WHERE CUST_CODE = #{FROM_CUST} AND PRODUCT_CODE = #{PRODUCT_CODE}
</update>

<select id="getStockQty">
SELECT STOCK_QTY FROM FABRIC_STOCK_TBL WITH(NOLOCK) WHERE CUST_CODE = #{FROM_CUST} AND IN_NO = #{FABRIC_NO}
</select>

<delete id="deleteFabricStock">
DELETE FROM FABRIC_STOCK_TBL WHERE CUST_CODE = #{FROM_CUST} AND IN_NO = #{FABRIC_NO}
</delete>

<update id="updateFabricStockQty">
UPDATE FABRIC_STOCK_TBL SET STOCK_QTY = #{newStockQty} WHERE CUST_CODE = #{FROM_CUST}  AND IN_NO = #{FABRIC_NO}
</update>

<insert id="insert2FabricStockInOUt">
INSERT INTO FABRIC_INOUT_TBL (IN_NO, SEQ_NO, INOUT_DIV, INOUT_QTY, REG_DATE, REG_TIME, EMP_NO, REMARK)
SELECT #{FABRIC_NO}, ISNULL(MAX(SEQ_NO), 0) + 1, '2', #{PRODUCT_QTY}, #{currentDate}, #{currentTime}, #{EMP_NO}, #{REMARK}
  FROM FABRIC_INOUT_TBL WITH(NOLOCK)
WHERE IN_NO = #{FABRIC_NO}
</insert>

<insert id="insert2FabricIn">
INSERT INTO FABRIC_IN_TBL (IN_NO, PRODUCT_CODE, IN_QTY, IN_DATE, IN_TIME, EMP_NO, REMARK, IMP_LOT_NO, DVR_LOT_NO)
VALUES (#{FABRIC_NO}, #{PRODUCT_CODE}, #{PRODUCT_QTY}, #{currentDate}, #{currentTime}, #{EMP_NO}, #{REMARK}, #{IMP_NO}, #{DVR_NO})
</insert>

<insert id="insert2FabricInOut">
INSERT INTO FABRIC_INOUT_TBL (IN_NO, SEQ_NO, INOUT_DIV, INOUT_QTY, REG_DATE, REG_TIME, EMP_NO, REMARK)
VALUES (#{FABRIC_NO}, #{SEQ_NO}, #{INOUT_DIV}, #{PRODUCT_QTY}, #{currentDate}, #{currentTime}, #{EMP_NO}, #{REMARK})
</insert>

<insert id="insert2FabricStock">
INSERT INTO FABRIC_STOCK_TBL (CUST_CODE, IN_NO, STOCK_QTY) VALUES (#{TO_CUST}, #{FABRIC_NO}, #{PRODUCT_QTY})"
</insert>
</mapper>
